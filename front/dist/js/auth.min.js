function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper")}Auth.prototype.run=function(){var n=this;n.listenShowHideWrapper(),n.listenSwitchEvent(),n.listenSigninEvent(),n.listenImgCaptchaEvent(),n.listenSignupEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideWrapper=function(){var n=this,t=$(".signin-btn"),e=$(".signup-btn"),o=$(".close-btn");t.click(function(){n.showEvent(),n.scrollWrapper.css({left:0})}),e.click(function(){n.showEvent(),n.scrollWrapper.css({left:-400})}),o.click(function(){n.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var t=this;$(".switch").click(function(){var n=t.scrollWrapper.css("left");(n=parseInt(n))<0?t.scrollWrapper.animate({left:"0"}):t.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSigninEvent=function(){var i=this,n=$(".signin-group"),o=n.find("input[name='telephone']"),a=n.find("input[name='password']"),s=n.find("input[name='remember']");n.find(".submit-btn").click(function(){var n=o.val(),t=a.val(),e=s.prop("checked");console.log("======="),console.log("是否嫩看到这里"),console.log("======="),myajax.post({url:"/account/login/",data:{telephone:n,password:t,remember:e?1:0},success:function(n){if(200==n.code)i.hideEvent(),window.location.reload();else{var t=n.message;if("string"==typeof t||t.constructor==String)window.messageBox.show(t);else for(var e in t){var o=t[e][0];window.messageBox.show(o)}}},fail:function(n){console.log(n)}})})},Auth.prototype.listenImgCaptchaEvent=function(){var n=$(".img-captcha");n.click(function(){n.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.listenSignupEvent=function(){var l=$(".signup-group"),n=l.find(".submit-btn");console.log("-----1-----"),n.click(function(){console.log("-----2-----");var n=l.find("input[name='telephone']"),t=l.find("input[name='username']"),e=l.find("input[name='img_captcha']"),o=l.find("input[name='password1']"),i=l.find("input[name='password2']"),a=n.val(),s=t.val(),r=e.val(),c=o.val(),p=i.val();console.log("-----3-----"),console.log(a,s,r,c,p),myajax.post({url:"/account/register/",data:{telephone:a,username:s,img_captcha:r,password1:c,password2:p},success:function(n){window.location.reload()}})})},$(function(){(new Auth).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
